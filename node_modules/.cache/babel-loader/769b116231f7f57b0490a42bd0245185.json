{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ISSA\\\\Desktop\\\\home\\\\my-app\\\\src\\\\FetchRandom.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nconst open = [65, 10, 13, 25, 35, 59, 80, 81, 56, 55, 40, 30];\nconst high = [20, 30, 40, 50, 60, 70, 80, 30, 20, 10, 12, 20];\nconst low = [1, 5, 10, 15, 20, 25, 30, 40, 50, 60, 70, 40];\nconst close = [8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 10];\nconst volume = [4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 50];\nconst data = {\n  labels: [\"januar\", \"desember\", \"november\", \"oktober\", \"september\", \"august\", \"juli\", \"juni\", \"mai\", \"april\", \"mars\", \"februar\"],\n  datasets: [{\n    label: 'Open',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(255,0,0,1)',\n    borderColor: 'rgba(255,0,0,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(255,0,0,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(255,0,0,1)',\n    pointHoverBorderColor: 'rgba(255,0,0,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: open\n  }, {\n    label: 'High',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(0,0,255,1)',\n    borderColor: 'rgba(0,0,255,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(0,0,255,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(0,0,255,1)',\n    pointHoverBorderColor: 'rgba(0,0,255,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: high\n  }, {\n    label: 'low',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(0,255,0,1)',\n    borderColor: 'rgba(0,255,0,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(0,255,0,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(0,255,0,1)',\n    pointHoverBorderColor: 'rgba(0,255,0,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: low\n  }, {\n    label: 'Close',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(0,0,0,1)',\n    borderColor: 'rgba(0,0,0,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(0,0,0,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(0,0,0,1)',\n    pointHoverBorderColor: 'rgba(0,0,0,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: close\n  }, {\n    label: 'Volume',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(255,255,0,1)',\n    borderColor: 'rgba(255,255,0,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(255,255,0,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(255,255,0,1)',\n    pointHoverBorderColor: 'rgba(255,255,0,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: volume\n  }],\n  options: {\n    scales: {\n      xAxes: [{\n        ticks: {\n          callback: function (tick, index, labels) {\n            return index % 3 ? \"\" : tick;\n          }\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  }\n};\nexport default class FetchRandom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      person: null,\n      case: ''\n    };\n  }\n\n  async componentDidMount() {\n    const splittedString = this.props.timeStamps.split(\" \");\n    console.log(splittedString[0]);\n    console.log(splittedString[1]); //const url = \"https://www.fxempire.com/api/v1/en/stocks/chart/candles?Identifier=AAPL.XNAS&IdentifierType=Symbol&AdjustmentMethod=All&IncludeExtended=False&period=5&Precision=Minutes&StartTime=8/28/2020%2016:0&EndTime=9/4/2020%2023:59&_fields=ChartBars.StartDate,ChartBars.High,ChartBars.Low,ChartBars.StartTime,ChartBars.Open,ChartBars.Close,ChartBars.Volume\";\n    // const response = await fetch(url)\n    // const data = await response.json()\n    // console.log(data)\n    // console.log(this.props.timeStamps)\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.timeStamps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data,\n          width: 600,\n          height: 400,\n          options: {\n            maintainAspectRatio: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ISSA/Desktop/home/my-app/src/FetchRandom.js"],"names":["React","Component","Line","open","high","low","close","volume","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","scales","xAxes","ticks","callback","tick","index","yAxes","beginAtZero","FetchRandom","state","loading","person","case","componentDidMount","splittedString","props","timeStamps","split","console","log","render","maintainAspectRatio"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,MAAMC,IAAI,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA4C,EAA5C,CAAb;AACA,MAAMC,IAAI,GAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA4B,EAA5B,EAA+B,EAA/B,EAAkC,EAAlC,EAAsC,EAAtC,EAAyC,EAAzC,CAAZ;AACA,MAAMC,GAAG,GAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAsC,EAAtC,EAAyC,EAAzC,CAAX;AACA,MAAMC,KAAK,GAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA2B,EAA3B,EAA8B,EAA9B,EAAiC,EAAjC,EAAoC,EAApC,EAAuC,EAAvC,CAAb;AACA,MAAMC,MAAM,GAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAsC,EAAtC,EAAyC,EAAzC,CAAd;AACA,MAAMC,IAAI,GAAG;AACTC,EAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,EAAmC,SAAnC,EAA8C,WAA9C,EAA2D,QAA3D,EAAqE,MAArE,EAA6E,MAA7E,EAAqF,KAArF,EAA4F,OAA5F,EAAqG,MAArG,EAA6G,SAA7G,CADC;AAETC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,WAAW,EAAE,GAHf;AAIEC,IAAAA,eAAe,EAAE,iBAJnB;AAKEC,IAAAA,WAAW,EAAE,iBALf;AAMEC,IAAAA,cAAc,EAAE,MANlB;AAOEC,IAAAA,UAAU,EAAE,EAPd;AAQEC,IAAAA,gBAAgB,EAAE,GARpB;AASEC,IAAAA,eAAe,EAAE,OATnB;AAUEC,IAAAA,gBAAgB,EAAE,iBAVpB;AAWEC,IAAAA,oBAAoB,EAAE,MAXxB;AAYEC,IAAAA,gBAAgB,EAAE,CAZpB;AAaEC,IAAAA,gBAAgB,EAAE,CAbpB;AAcEC,IAAAA,yBAAyB,EAAE,iBAd7B;AAeEC,IAAAA,qBAAqB,EAAE,iBAfzB;AAgBEC,IAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,IAAAA,WAAW,EAAE,CAjBf;AAkBEC,IAAAA,cAAc,EAAE,EAlBlB;AAmBEpB,IAAAA,IAAI,EAAEL;AAnBR,GADQ,EAsBR;AACEQ,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,WAAW,EAAE,GAHf;AAIEC,IAAAA,eAAe,EAAE,iBAJnB;AAKEC,IAAAA,WAAW,EAAE,iBALf;AAMEC,IAAAA,cAAc,EAAE,MANlB;AAOEC,IAAAA,UAAU,EAAE,EAPd;AAQEC,IAAAA,gBAAgB,EAAE,GARpB;AASEC,IAAAA,eAAe,EAAE,OATnB;AAUEC,IAAAA,gBAAgB,EAAE,iBAVpB;AAWEC,IAAAA,oBAAoB,EAAE,MAXxB;AAYEC,IAAAA,gBAAgB,EAAE,CAZpB;AAaEC,IAAAA,gBAAgB,EAAE,CAbpB;AAcEC,IAAAA,yBAAyB,EAAE,iBAd7B;AAeEC,IAAAA,qBAAqB,EAAE,iBAfzB;AAgBEC,IAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,IAAAA,WAAW,EAAE,CAjBf;AAkBEC,IAAAA,cAAc,EAAE,EAlBlB;AAmBEpB,IAAAA,IAAI,EAAEJ;AAnBR,GAtBQ,EA2CR;AACEO,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,WAAW,EAAE,GAHf;AAIEC,IAAAA,eAAe,EAAE,iBAJnB;AAKEC,IAAAA,WAAW,EAAE,iBALf;AAMEC,IAAAA,cAAc,EAAE,MANlB;AAOEC,IAAAA,UAAU,EAAE,EAPd;AAQEC,IAAAA,gBAAgB,EAAE,GARpB;AASEC,IAAAA,eAAe,EAAE,OATnB;AAUEC,IAAAA,gBAAgB,EAAE,iBAVpB;AAWEC,IAAAA,oBAAoB,EAAE,MAXxB;AAYEC,IAAAA,gBAAgB,EAAE,CAZpB;AAaEC,IAAAA,gBAAgB,EAAE,CAbpB;AAcEC,IAAAA,yBAAyB,EAAE,iBAd7B;AAeEC,IAAAA,qBAAqB,EAAE,iBAfzB;AAgBEC,IAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,IAAAA,WAAW,EAAE,CAjBf;AAkBEC,IAAAA,cAAc,EAAE,EAlBlB;AAmBEpB,IAAAA,IAAI,EAAEH;AAnBR,GA3CQ,EAgER;AACEM,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,WAAW,EAAE,GAHf;AAIEC,IAAAA,eAAe,EAAE,eAJnB;AAKEC,IAAAA,WAAW,EAAE,eALf;AAMEC,IAAAA,cAAc,EAAE,MANlB;AAOEC,IAAAA,UAAU,EAAE,EAPd;AAQEC,IAAAA,gBAAgB,EAAE,GARpB;AASEC,IAAAA,eAAe,EAAE,OATnB;AAUEC,IAAAA,gBAAgB,EAAE,eAVpB;AAWEC,IAAAA,oBAAoB,EAAE,MAXxB;AAYEC,IAAAA,gBAAgB,EAAE,CAZpB;AAaEC,IAAAA,gBAAgB,EAAE,CAbpB;AAcEC,IAAAA,yBAAyB,EAAE,eAd7B;AAeEC,IAAAA,qBAAqB,EAAE,eAfzB;AAgBEC,IAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,IAAAA,WAAW,EAAE,CAjBf;AAkBEC,IAAAA,cAAc,EAAE,EAlBlB;AAmBEpB,IAAAA,IAAI,EAAEF;AAnBR,GAhEQ,EAqFR;AACEK,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,WAAW,EAAE,GAHf;AAIEC,IAAAA,eAAe,EAAE,mBAJnB;AAKEC,IAAAA,WAAW,EAAE,mBALf;AAMEC,IAAAA,cAAc,EAAE,MANlB;AAOEC,IAAAA,UAAU,EAAE,EAPd;AAQEC,IAAAA,gBAAgB,EAAE,GARpB;AASEC,IAAAA,eAAe,EAAE,OATnB;AAUEC,IAAAA,gBAAgB,EAAE,mBAVpB;AAWEC,IAAAA,oBAAoB,EAAE,MAXxB;AAYEC,IAAAA,gBAAgB,EAAE,CAZpB;AAaEC,IAAAA,gBAAgB,EAAE,CAbpB;AAcEC,IAAAA,yBAAyB,EAAE,mBAd7B;AAeEC,IAAAA,qBAAqB,EAAE,mBAfzB;AAgBEC,IAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,IAAAA,WAAW,EAAE,CAjBf;AAkBEC,IAAAA,cAAc,EAAE,EAlBlB;AAmBEpB,IAAAA,IAAI,EAAED;AAnBR,GArFQ,CAFD;AA6GTsB,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,CAAC;AACJC,QAAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAE,UAASC,IAAT,EAAeC,KAAf,EAAsB1B,MAAtB,EAA8B;AACpC,mBAAQ0B,KAAK,GAAG,CAAT,GAAc,EAAd,GAAmBD,IAA1B;AACH;AAHE;AADH,OAAD,CADH;AAQJE,MAAAA,KAAK,EAAE,CAAC;AACJJ,QAAAA,KAAK,EAAE;AACHK,UAAAA,WAAW,EAAE;AADV;AADH,OAAD;AARH;AADH;AA7GA,CAAb;AA+HA,eAAe,MAAMC,WAAN,SAA0BrC,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/CsC,KAD+C,GACvC;AACJC,MAAAA,OAAO,EAAG,KADN;AAEJC,MAAAA,MAAM,EAAE,IAFJ;AAGJC,MAAAA,IAAI,EAAG;AAHH,KADuC;AAAA;;AAM/C,QAAMC,iBAAN,GAAyB;AACvB,UAAMC,cAAc,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,KAAtB,CAA4B,GAA5B,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,cAAc,CAAC,CAAD,CAA1B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,cAAc,CAAC,CAAD,CAA1B,EAHuB,CAIrB;AACA;AACA;AACA;AACA;AAEH;;AACDM,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,gBACK,KAAKX,KAAL,CAAWC,OAAX,gBACD;AAAA,kBAAM,KAAKK,KAAL,CAAWC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADC,gBAED;AAAA,+BACC,QAAC,IAAD;AACG,UAAA,IAAI,EAAEtC,IADT;AAEG,UAAA,KAAK,EAAE,GAFV;AAGG,UAAA,MAAM,EAAE,GAHX;AAIG,UAAA,OAAO,EAAE;AAAE2C,YAAAA,mBAAmB,EAAE;AAAvB;AAJZ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAhC8C","sourcesContent":["import React, { Component } from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\nconst open = [65, 10, 13, 25, 35, 59, 80, 81, 56, 55, 40,30]\r\nconst high =[20, 30, 40, 50, 60, 70, 80,30,20,10, 12,20]\r\nconst low =[1, 5, 10, 15, 20, 25, 30, 40, 50, 60,70,40]\r\nconst close =[8, 16, 24, 32, 40, 48, 56,64,72,80,88,10]\r\nconst volume =[4, 8, 12, 16, 20, 24, 28, 32, 36, 40,44,50]\r\nconst data = {\r\n    labels: [\"januar\", \"desember\", \"november\", \"oktober\", \"september\", \"august\", \"juli\", \"juni\", \"mai\", \"april\", \"mars\", \"februar\"],\r\n    datasets: [\r\n      {\r\n        label: 'Open',\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: 'rgba(255,0,0,1)',\r\n        borderColor: 'rgba(255,0,0,1)',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: 'rgba(255,0,0,1)',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: 'rgba(255,0,0,1)',\r\n        pointHoverBorderColor: 'rgba(255,0,0,1)',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: open\r\n      },\r\n      {\r\n        label: 'High',\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: 'rgba(0,0,255,1)',\r\n        borderColor: 'rgba(0,0,255,1)',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: 'rgba(0,0,255,1)',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: 'rgba(0,0,255,1)',\r\n        pointHoverBorderColor: 'rgba(0,0,255,1)',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: high\r\n      },\r\n      {\r\n        label: 'low',\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: 'rgba(0,255,0,1)',\r\n        borderColor: 'rgba(0,255,0,1)',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: 'rgba(0,255,0,1)',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: 'rgba(0,255,0,1)',\r\n        pointHoverBorderColor: 'rgba(0,255,0,1)',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: low\r\n      },\r\n      {\r\n        label: 'Close',\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: 'rgba(0,0,0,1)',\r\n        borderColor: 'rgba(0,0,0,1)',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: 'rgba(0,0,0,1)',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: 'rgba(0,0,0,1)',\r\n        pointHoverBorderColor: 'rgba(0,0,0,1)',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: close\r\n      },\r\n      {\r\n        label: 'Volume',\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: 'rgba(255,255,0,1)',\r\n        borderColor: 'rgba(255,255,0,1)',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: 'rgba(255,255,0,1)',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: 'rgba(255,255,0,1)',\r\n        pointHoverBorderColor: 'rgba(255,255,0,1)',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: volume\r\n      }\r\n    ],\r\n    options: {\r\n        scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                    callback: function(tick, index, labels) {\r\n                        return (index % 3) ? \"\" : tick;\r\n                    }\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true\r\n                }\r\n            }]\r\n        }\r\n    }\r\n  };\r\n\r\nexport default class FetchRandom extends Component {\r\n    state = {\r\n        loading : false,\r\n        person: null,\r\n        case : '',\r\n    }\r\n    async componentDidMount(){\r\n      const splittedString = this.props.timeStamps.split(\" \")\r\n      console.log(splittedString[0])\r\n      console.log(splittedString[1])\r\n        //const url = \"https://www.fxempire.com/api/v1/en/stocks/chart/candles?Identifier=AAPL.XNAS&IdentifierType=Symbol&AdjustmentMethod=All&IncludeExtended=False&period=5&Precision=Minutes&StartTime=8/28/2020%2016:0&EndTime=9/4/2020%2023:59&_fields=ChartBars.StartDate,ChartBars.High,ChartBars.Low,ChartBars.StartTime,ChartBars.Open,ChartBars.Close,ChartBars.Volume\";\r\n        // const response = await fetch(url)\r\n        // const data = await response.json()\r\n        // console.log(data)\r\n        // console.log(this.props.timeStamps)\r\n        \r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                {this.state.loading ? \r\n                <div>{this.props.timeStamps}</div> :\r\n                <div>\r\n                 <Line    \r\n                    data={data}               \r\n                    width={600}\r\n                    height={400}\r\n                    options={{ maintainAspectRatio: false }}\r\n                />\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}